#----------------- START required config for haproxui -----------------#
defaults
    timeout client 10s
    timeout server 10s
    timeout connect 10s

global
# Create an admin level socket that can be used
# to query and modify the haproxy configuration.
   stats socket /var/run/haproxy.sock mode 600 level admin
   stats timeout 2m

# this socket is opened for testing purposes, but
# is not required for the haproxui support.
   stats socket 0.0.0.0:9999 mode 600 level admin

# load the lua socket forwarder, this is where the magic happens
   lua-load instance_manager.lua

# Load the socket command lua script to process http requests.
# THIS NEEDS TO HAVE A FIREWALL OR OTHER ACCESS CONTROL IN FRONT OF IT!
# A good method to protect this is to bind *only* to 127.0.0.1, and then
# use ssh tunneling from the machine where you want to use haproxui.
frontend stats_over_http
    mode http
    bind :10000
    http-request use-service lua.instance_manager

#------------------ END required config for haproxui ------------------#

#------------------ START example configs ------------------#

# These are example configs to example.com so that
# we have something to look at in our interfaces.
listen example_forward_listener
    mode http
    bind :10001
    http-request set-header Host example.com
    server server1 example.com:80
    server server2 example.com:80 backup

frontend example_forward_frontend
    mode http
    bind :10002
    default_backend backend_servers

backend backend_servers
    mode http
    http-request set-header Host example.com
    server server1 not-real.127.0.0.1.xip.io:80 check inter 100000
    server server2 example.com:80 backup

# This is the default stats view, so that we can see
# what is reported in the normal stats view.
listen stats
    bind  0.0.0.0:10003
    mode            http
    log             global

    stats enable
    stats refresh 5s
    stats show-node
    stats show-legends
    stats uri  /
#------------------- END example configs -------------------#